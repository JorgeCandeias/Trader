namespace Outcompute.Trader.Trading.Tests;

public class RmiExtensionsTests
{
    [Fact]
    public void Enumerates()
    {
        var data = new (decimal, decimal)[]
        {
            /* BTCGBP @ 1H @ Binance */

            /* 2021-12-05 */
            /* 00:00 */ (37304.23M, 40.47M),
            /* 01:00 */ (37400.00M, 40.18M),
            /* 02:00 */ (37294.65M, 39.35M),
            /* 03:00 */ (37436.76M, 40.49M),
            /* 04:00 */ (37175.13M, 39.14M),
            /* 05:00 */ (37593.87M, 41.92M),
            /* 06:00 */ (37643.13M, 43.83M),
            /* 07:00 */ (37500.00M, 46.79M),
            /* 08:00 */ (37643.18M, 47.24M),
            /* 09:00 */ (37245.00M, 43.97M),
            /* 10:00 */ (37435.93M, 43.45M),
            /* 11:00 */ (37459.27M, 41.92M),
            /* 12:00 */ (37535.30M, 45.21M),
            /* 13:00 */ (37477.97M, 45.69M),
            /* 14:00 */ (37177.36M, 42.97M),
            /* 15:00 */ (36382.76M, 34.06M),
            /* 16:00 */ (36832.02M, 30.27M),
            /* 17:00 */ (37439.09M, 33.50M),
            /* 18:00 */ (37308.96M, 43.47M),
            /* 19:00 */ (37179.41M, 46.70M),
            /* 20:00 */ (37093.56M, 44.01M),
            /* 21:00 */ (37352.61M, 44.44M),
            /* 22:00 */ (37365.23M, 46.36M),
            /* 23:00 */ (37432.22M, 49.76M),

            /* 2021-12-06 */
            /* 00:00 */ (37003.93M, 46.49M),
            /* 01:00 */ (37034.41M, 43.57M),
            /* 02:00 */ (37105.81M, 40.84M),
            /* 03:00 */ (37281.39M, 44.05M),
            /* 04:00 */ (37156.22M, 45.45M),
            /* 05:00 */ (36970.01M, 44.12M),
            /* 06:00 */ (36547.90M, 37.73M),
            /* 07:00 */ (36671.02M, 34.20M),
            /* 08:00 */ (36494.56M, 31.13M),
            /* 09:00 */ (35842.27M, 27.22M),
            /* 10:00 */ (35874.22M, 23.62M),
            /* 11:00 */ (36633.80M, 25.47M),
            /* 12:00 */ (36543.07M, 34.15M),
            /* 13:00 */ (36420.67M, 40.02M),
            /* 14:00 */ (36360.83M, 38.19M),
            /* 15:00 */ (36900.00M, 41.93M),
            /* 16:00 */ (37074.95M, 48.13M),
            /* 17:00 */ (36918.81M, 52.76M),
            /* 18:00 */ (37063.63M, 54.05M),
            /* 19:00 */ (37031.64M, 53.63M),
            /* 20:00 */ (36768.19M, 52.29M),
            /* 21:00 */ (37659.62M, 57.43M),
            /* 22:00 */ (38203.27M, 65.33M),
            /* 23:00 */ (38026.08M, 71.39M),

            /* 2021-12-07 */
            /* 00:00 */ (38162.69M, 73.41M),
            /* 01:00 */ (38213.26M, 73.45M),
            /* 02:00 */ (38226.54M, 74.30M),
            /* 03:00 */ (38392.47M, 75.26M),
            /* 04:00 */ (38393.50M, 76.02M),
            /* 05:00 */ (38378.05M, 76.68M),
            /* 06:00 */ (38544.89M, 77.34M),
            /* 07:00 */ (38406.85M, 77.40M),
            /* 08:00 */ (38640.84M, 78.62M),
            /* 09:00 */ (38703.85M, 79.34M),
            /* 10:00 */ (38781.22M, 80.98M),
            /* 11:00 */ (38902.73M, 82.05M),
            /* 12:00 */ (38460.86M, 77.68M),
            /* 13:00 */ (38492.60M, 72.73M),
            /* 14:00 */ (38868.17M, 72.13M),
            /* 15:00 */ (39051.89M, 75.77M),
            /* 16:00 */ (38780.68M, 77.33M),
            /* 17:00 */ (38507.54M, 71.17M),
            /* 18:00 */ (38462.78M, 62.43M),
            /* 19:00 */ (38380.63M, 57.28M),
            /* 20:00 */ (38043.17M, 51.93M),
            /* 21:00 */ (38083.16M, 47.98M),
            /* 22:00 */ (37866.56M, 43.29M)
        };

        var result = data.Select(x => x.Item1).Rmi(3, 14).ToArray();

        for (var i = 14; i < data.Length; i++)
        {
            if (Math.Abs(data[i].Item2 - result[i]) >= 10M)
            {
                Assert.Equal(data[i].Item2, result[i]);
            }
        }
    }
}